public interface Observer {
    update(int placarCasa, int placarFora);
}

import java.util.HashMap;

public class GerenciadorEventos {
    private HashMap<String, List<Observer>> observers;

    public PartidaFutebol() {
        this.observers = [];
    }

    public void addObservers(String event, Observer observer) {
        this.observers.add(event, observer);
    }

    public void removeObservers(String event, Observer observer) {
        this.observers.remove(event, observer);
    }

    public notifyObservers(String event, int placarCasa, int placarFora) {
        for(Observer observer in observers.of(String event)) {
            observer.update(event, placarCasa, placarFora);
        }
    }
}

public class Partida {
    private GerenciadorEventos events
    private int placarCasa;
    private int placarFora;

    public Partida(int placarCasa, int placarFora) {
        this.events = new GerenciadorEventos();
    }

    public golCasa() {
        this.placarCasa++;
    }

    public golFora() {
        this.placarFora++;
    }
}

public class Placar implements Observer {
    update(String event, int placarCasa, int placarFora) {
        System.out.println(event);
        System.out.println(placarCasa);
        System.out.println(placarFora);
    }
}

public class Tabela implements Observer {
    update(String event, int placarCasa, int placarFora){
        System.out.println(event);
        System.out.println(placarCasa);
        System.out.println(placarFora);
    }
}
